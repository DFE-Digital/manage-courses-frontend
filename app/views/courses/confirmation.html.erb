<%= content_for :page_title, title_with_error_prefix("Check your answers before confirming", course.errors.any?) %>

<div class="govuk-grid-row">
  <div class="govuk-grid-column-two-thirds">
    <h1 class="govuk-heading-l">
      Check your answers before confirming
    </h1>

    <%= render "shared/errors" %>

    <%= form_with model: course,
                  url: provider_recruitment_cycle_courses_path(@provider.provider_code, @provider.recruitment_cycle_year),
                  method: :post,
                  builder: GOVUKDesignSystemFormBuilder::FormBuilder do |f| %>

      <%= render "shared/course_creation_hidden_fields",
        form: f,
        course_creation_params: @course_creation_params,
        except_keys: [] %>

      <%= govuk_summary_list(html_attributes: { data: { qa: "course__details" } }) do |summary_list| %>
        <%= summary_list.slot(
          :row,
          key: "Level",
          value: course.level.humanize,
          action: change_link_to("level", new_provider_recruitment_cycle_courses_level_path(course.provider.provider_code, course.recruitment_cycle_year, params.to_unsafe_h.merge(goto_confirmation: true))),
          html_attributes: {
            data: {
              qa: "course__level",
            },
          },
        ) %>

        <%= summary_list.slot(
          :row,
          key: raw("<abbr class=\"app-!-text-decoration-underline-dotted\" title=\"Special educational needs and disability\">SEND</abbr>"),
          value: course.is_send?,
          action: change_link_to("SEND", new_provider_recruitment_cycle_courses_level_path(course.provider.provider_code, course.recruitment_cycle_year, params.to_unsafe_h.merge(goto_confirmation: true))),
          html_attributes: {
            data: {
              qa: "course__is_send",
            },
          },
        ) %>

        <% unless course.is_further_education? %>
          <%= summary_list.slot(
            :row,
            key: "Subject".pluralize(course.subjects.count),
            value: course.sorted_subjects,
            action: change_link_to("subjects", new_provider_recruitment_cycle_courses_subjects_path(course.provider.provider_code, course.recruitment_cycle_year, params.to_unsafe_h.merge(goto_confirmation: true))),
            html_attributes: {
              data: {
                qa: "course__subjects",
              },
            },
          ) %>
        <% end %>

        <% unless course.is_further_education? %>
          <%= summary_list.slot(
            :row,
            key: "Age range",
            value: course.age_range,
            action: change_link_to("age range", new_provider_recruitment_cycle_courses_age_range_path(course.provider.provider_code, course.recruitment_cycle_year, params.to_unsafe_h.merge(goto_confirmation: true))),
            html_attributes: {
              data: {
                qa: "course__age_range",
              },
            },
          ) %>
        <% end %>

        <%= summary_list.slot(
          :row,
          key: "Outcome",
          value: course.outcome,
          action: change_link_to("outcome", new_provider_recruitment_cycle_courses_outcome_path(course.provider.provider_code, course.recruitment_cycle_year, params.to_unsafe_h.merge(goto_confirmation: true))),
          html_attributes: {
            data: {
              qa: "course__outcome",
            },
          },
        ) %>

        <% if @provider.accredited_body? %>
          <%= summary_list.slot(
            :row,
            key: "Apprenticeship",
            value: course.apprenticeship?,
            action: change_link_to("if apprenticeship", new_provider_recruitment_cycle_courses_apprenticeship_path(course.provider.provider_code, course.recruitment_cycle_year, params.to_unsafe_h.merge(goto_confirmation: true))),
            html_attributes: {
              data: {
                qa: "course__apprenticeship",
              },
            },
          ) %>
        <% else %>
          <%= summary_list.slot(
            :row,
            key: "Fee or salary",
            value: course.funding,
            action: change_link_to("if fee or salary", new_provider_recruitment_cycle_courses_fee_or_salary_path(course.provider.provider_code, course.recruitment_cycle_year, params.to_unsafe_h.merge(goto_confirmation: true))),
            html_attributes: {
              data: {
                qa: "course__fee_or_salary",
              },
            },
          ) %>
        <% end %>

        <%= summary_list.slot(
          :row,
          key: "Full or part time",
          value: course.study_mode&.humanize,
          action: change_link_to("if full or part time", new_provider_recruitment_cycle_courses_study_mode_path(course.provider.provider_code, course.recruitment_cycle_year, params.to_unsafe_h.merge(goto_confirmation: true))),
          html_attributes: {
            data: {
              qa: "course__study_mode",
            },
          },
        ) %>

        <% content_for :locations do %>
          <% if course.sites.nil? || course.sites.empty? %>
            <span class="app-!-colour-muted">None</span>
          <% elsif course.sites.size == 1 %>
            <%= course.sites.first.location_name %>
          <% else %>
            <ul class="govuk-list">
              <% course.alphabetically_sorted_sites.each do |site| %>
                <li><%= site.location_name %></li>
              <% end %>
            </ul>
          <% end %>
          <% if course.provider.sites.count < 2 %>
            <p class="govuk-body" data-qa="course__locations__help">
              You canâ€™t change this because you only have 1 location.
            </p>
            <p class="govuk-body">
              <%= govuk_link_to "Manage your locations", provider_locations_path, target: "_blank", rel: "noopener noreferrer" %>
            </p>
          <% end %>
        <% end %>
        <%= summary_list.slot(
          :row,
          key: "Locations",
          value: content_for(:locations),
          action: @course.provider.sites.count > 1 ? change_link_to("locations", new_provider_recruitment_cycle_courses_locations_path(course.provider.provider_code, course.recruitment_cycle_year, params.to_unsafe_h.merge(goto_confirmation: true))) : nil,
          html_attributes: {
            data: {
              qa: "course__locations",
            },
          },
        ) %>

        <% unless @provider.accredited_body? || course.is_further_education? %>
          <%= summary_list.slot(
            :row,
            key: "Accredited body",
            value: course.accrediting_provider.provider_name,
            action: change_link_to("accredited body", new_provider_recruitment_cycle_courses_accredited_body_path(course.provider.provider_code, course.recruitment_cycle_year, params.to_unsafe_h.merge(goto_confirmation: true))),
            html_attributes: {
              data: {
                qa: "course__accredited_body",
              },
            },
          ) %>
        <% end %>

        <% content_for :applications_open do %>
          <% if course.applications_open_from == @recruitment_cycle.application_start_date %>
            As soon as the course is on Find (recommended)
          <% else %>
            <%= l(course.applications_open_from&.to_date) %>
          <% end %>
        <% end %>
        <%= summary_list.slot(
          :row,
          key: "Applications open",
          value: content_for(:applications_open),
          action: change_link_to("date applications open", new_provider_recruitment_cycle_courses_applications_open_path(course.provider.provider_code, course.recruitment_cycle_year, params.to_unsafe_h.merge(goto_confirmation: true))),
          html_attributes: {
            data: {
              qa: "course__applications_open",
            },
          },
        ) %>

        <%= summary_list.slot(
          :row,
          key: "Course starts",
          value: course.start_date.present? ? l(course.start_date&.to_date, format: :short) : nil,
          action: change_link_to("date course starts", new_provider_recruitment_cycle_courses_start_date_path(course.provider.provider_code, course.recruitment_cycle_year, params.to_unsafe_h.merge(goto_confirmation: true))),
          html_attributes: {
            data: {
              qa: "course__start_date",
            },
          },
        ) %>

        <%= summary_list.slot(
          :row,
          key: "Title",
          value: course.name,
          html_attributes: {
            data: {
              qa: "course__name",
            },
          },
        ) %>

        <%= summary_list.slot(
          :row,
          key: "Description",
          value: course.description,
          html_attributes: {
            data: {
              qa: "course__description",
            },
          },
        ) %>

        <% if course.gcse_subjects_required.any? && @provider.recruitment_cycle_year.to_i < Provider::CHANGES_INTRODUCED_IN_2022_CYCLE %>
          <% content_for :entry_requirements do %>
            <% course.gcse_subjects_required.each do |subject| %>
              <%= render(
                partial: "courses/entry_requirements",
                locals: {
                  gcse_subject: subject.titleize,
                  gcse_subject_code: course[subject],
                },
              ) %>
            <% end %>
          <% end %>
          <%= summary_list.slot(
            :row,
            key: "UCAS Apply: GCSE requirements for applicants",
            value: content_for(:entry_requirements),
            action: change_link_to("entry requirements", new_provider_recruitment_cycle_courses_entry_requirements_path(course.provider.provider_code, course.recruitment_cycle_year, params.to_unsafe_h.merge(goto_confirmation: true))),
            html_attributes: {
              data: {
                qa: "course__entry_requirements",
              },
            },
          ) %>
        <% end %>

        <% if course.next_cycle? && course.has_fees? %>
          <% content_for :allocations do %>
            <% if course.has_physical_education_subject? %>
              <p class="govuk-body">Recruitment to fee-funded PE courses is limited by the number of places allocated to you by DfE.</p>
              <p class="govuk-body">If you havenâ€™t already, you must <%= govuk_link_to "request allocations", "https://docs.google.com/forms/d/e/1FAIpQLSfMJDoChdgXmGJM1UcEgoiyvlR9ExESF1-vv32lrXF8AK3ShA/viewform?usp=sf_link" %></p>
            <% else %>
              Recruitment is not restricted
            <% end %>
          <% end %>
          <%= summary_list.slot(
            :row,
            key: "Allocations",
            value: content_for(:allocations),
            html_attributes: {
              data: {
                qa: "course__allocations",
              },
            },
          ) %>
        <% end %>
      <% end %>

      <div class="govuk-!-margin-top-8" data-qa="course__preview">
        <h2 class="govuk-heading-m">Preview</h2>
        <p class="govuk-body">See how this course will appear when itâ€™s published on Find postgraduate teacher training:</p>
        <%= govuk_inset_text do %>
          <h3 class="govuk-heading-m" data-qa="course__name">
            <span class="govuk-heading-s govuk-!-margin-bottom-0"><%= @provider.provider_name %></span>
            <%= course.name %>
          </h3>
          <p class="govuk-body" data-qa="course__description">Course: <%= course.description %></p>
        <% end %>
      </div>

      <%= f.govuk_submit "Save new course", data: { qa: "course__save" } %>
      <p class="govuk-body">Saving this course will not publish it.</p>
    <% end %>
  </div>
</div>
